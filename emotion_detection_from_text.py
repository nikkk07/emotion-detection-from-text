# -*- coding: utf-8 -*-
"""emotion_detection_from_text.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mXZwBCBnR9IOqL6JNLUW6tZyKpQU5N2J
"""

!pip install -q transformers torch

from transformers import AutoTokenizer, AutoModelForSequenceClassification
from transformers import pipeline
import torch

# Load the tokenizer and also the model
model_name = "j-hartmann/emotion-english-distilroberta-base"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSequenceClassification.from_pretrained(model_name)

# Creating the emotions classification pipeline
emotion_pipeline = pipeline("text-classification", model=model, tokenizer=tokenizer, return_all_scores=True)

def detect_emotions(text):
    results = emotion_pipeline(text)[0]
    sorted_results = sorted(results, key=lambda x: x['score'], reverse=True)

    print(f"\nInput Text: {text}")
    print("Detected Emotions (sorted):")
    for result in sorted_results:
        print(f"{result['label']}: {result['score']:.3f}")

sample_text = "Iâ€™m feeling so happy and proud of my achievements!"
detect_emotions(sample_text)

import ipywidgets as widgets
from IPython.display import display

text_box = widgets.Text(
    value='',
    placeholder='Type something...',
    description='Input:',
    disabled=False,
    layout=widgets.Layout(width='600px')
)

button = widgets.Button(description="Detect Emotion")

output = widgets.Output()

def on_button_clicked(b):
    with output:
        output.clear_output()
        detect_emotions(text_box.value)

button.on_click(on_button_clicked)
display(text_box, button, output)